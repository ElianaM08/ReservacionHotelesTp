// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReservacionHoteles.Repos;

#nullable disable

namespace ReservacionHoteles.Migrations
{
    [DbContext(typeof(ReservacionHotelesContext))]
    partial class ReservacionHotelesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ReservacionHoteles.Models.CondicionPago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("smalldatetime");

                    b.HasKey("Id");

                    b.ToTable("CondicionPago");
                });

            modelBuilder.Entity("ReservacionHoteles.Models.Destinos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("smalldatetime");

                    b.HasKey("Id");

                    b.ToTable("Destinos");
                });

            modelBuilder.Entity("ReservacionHoteles.Models.Disponibilidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("HotelRefId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoRefId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HotelRefId");

                    b.HasIndex("TipoRefId");

                    b.ToTable("Disponibilidad");
                });

            modelBuilder.Entity("ReservacionHoteles.Models.Funcion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DestinoRefId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaHoraEntrada")
                        .IsRequired()
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaHoraSalida")
                        .IsRequired()
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int?>("HabitacionesRefId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("HotelRefId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DestinoRefId");

                    b.HasIndex("HabitacionesRefId");

                    b.HasIndex("HotelRefId");

                    b.ToTable("Funcion");
                });

            modelBuilder.Entity("ReservacionHoteles.Models.GestionReserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DestinosRefId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaHoraEntrada")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaHoraSalida")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("HabitacionesRefId")
                        .HasColumnType("int");

                    b.Property<int?>("HotelRefId")
                        .HasColumnType("int");

                    b.Property<int?>("Tarifa1RefId")
                        .HasColumnType("int");

                    b.Property<int?>("Tarifa2RefId")
                        .HasColumnType("int");

                    b.Property<int?>("Tarifa3RefId")
                        .HasColumnType("int");

                    b.Property<int?>("Tarifa4RefId")
                        .HasColumnType("int");

                    b.Property<int?>("Tarifa5RefId")
                        .HasColumnType("int");

                    b.Property<int?>("Tarifa6RefId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DestinosRefId");

                    b.HasIndex("HotelRefId");

                    b.HasIndex("Tarifa1RefId");

                    b.HasIndex("Tarifa2RefId");

                    b.HasIndex("Tarifa3RefId");

                    b.HasIndex("Tarifa4RefId");

                    b.HasIndex("Tarifa5RefId");

                    b.HasIndex("Tarifa6RefId");

                    b.ToTable("GestionReserva");
                });

            modelBuilder.Entity("ReservacionHoteles.Models.Habitaciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("NumHabitaciones")
                        .HasColumnType("int");

                    b.Property<int?>("NumPersonas")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Habitaciones");
                });

            modelBuilder.Entity("ReservacionHoteles.Models.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Calificacion")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("DestinoRefId")
                        .HasColumnType("int");

                    b.Property<string>("DestinosRefId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaEntrada")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaSalida")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ImagemHotel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("TipoId")
                        .HasColumnType("int");

                    b.Property<string>("TipoRefId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DestinoRefId");

                    b.HasIndex("TipoId");

                    b.ToTable("Hotel");
                });

            modelBuilder.Entity("ReservacionHoteles.Models.ListaPrecio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CondicionPagoRefId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("FechaHasta")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("CondicionPagoRefId");

                    b.ToTable("ListaPrecio");
                });

            modelBuilder.Entity("ReservacionHoteles.Models.Tarifa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("ListaPrecioRefId")
                        .HasColumnType("int");

                    b.Property<int>("PorcentajeDescuento")
                        .HasColumnType("int");

                    b.Property<decimal?>("TarifaPrecio")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("ListaPrecioRefId");

                    b.ToTable("Tarifa");
                });

            modelBuilder.Entity("ReservacionHoteles.Models.Tipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("smalldatetime");

                    b.HasKey("Id");

                    b.ToTable("Tipo");
                });

            modelBuilder.Entity("ReservacionHoteles.Models.funcionTarifa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FuncionId")
                        .HasColumnType("int");

                    b.Property<int?>("TarifaRefId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FuncionId");

                    b.HasIndex("TarifaRefId");

                    b.ToTable("FuncionTarifa");
                });

            modelBuilder.Entity("ReservacionHoteles.Models.Disponibilidad", b =>
                {
                    b.HasOne("ReservacionHoteles.Models.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("HotelRefId");

                    b.HasOne("ReservacionHoteles.Models.Tipo", "Tipo")
                        .WithMany()
                        .HasForeignKey("TipoRefId");

                    b.Navigation("Hotel");

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("ReservacionHoteles.Models.Funcion", b =>
                {
                    b.HasOne("ReservacionHoteles.Models.Destinos", "Destinos")
                        .WithMany()
                        .HasForeignKey("DestinoRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReservacionHoteles.Models.Habitaciones", "Habitaciones")
                        .WithMany()
                        .HasForeignKey("HabitacionesRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReservacionHoteles.Models.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("HotelRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Destinos");

                    b.Navigation("Habitaciones");

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("ReservacionHoteles.Models.GestionReserva", b =>
                {
                    b.HasOne("ReservacionHoteles.Models.Destinos", "Destinos")
                        .WithMany()
                        .HasForeignKey("DestinosRefId");

                    b.HasOne("ReservacionHoteles.Models.Habitaciones", "Habitaciones")
                        .WithMany()
                        .HasForeignKey("DestinosRefId");

                    b.HasOne("ReservacionHoteles.Models.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("HotelRefId");

                    b.HasOne("ReservacionHoteles.Models.Tarifa", "Tarifa1")
                        .WithMany()
                        .HasForeignKey("Tarifa1RefId");

                    b.HasOne("ReservacionHoteles.Models.Tarifa", "Tarifa2")
                        .WithMany()
                        .HasForeignKey("Tarifa2RefId");

                    b.HasOne("ReservacionHoteles.Models.Tarifa", "Tarifa3")
                        .WithMany()
                        .HasForeignKey("Tarifa3RefId");

                    b.HasOne("ReservacionHoteles.Models.Tarifa", "Tarifa4")
                        .WithMany()
                        .HasForeignKey("Tarifa4RefId");

                    b.HasOne("ReservacionHoteles.Models.Tarifa", "Tarifa5")
                        .WithMany()
                        .HasForeignKey("Tarifa5RefId");

                    b.HasOne("ReservacionHoteles.Models.Tarifa", "Tarifa6")
                        .WithMany()
                        .HasForeignKey("Tarifa6RefId");

                    b.Navigation("Destinos");

                    b.Navigation("Habitaciones");

                    b.Navigation("Hotel");

                    b.Navigation("Tarifa1");

                    b.Navigation("Tarifa2");

                    b.Navigation("Tarifa3");

                    b.Navigation("Tarifa4");

                    b.Navigation("Tarifa5");

                    b.Navigation("Tarifa6");
                });

            modelBuilder.Entity("ReservacionHoteles.Models.Hotel", b =>
                {
                    b.HasOne("ReservacionHoteles.Models.Destinos", "Destinos")
                        .WithMany()
                        .HasForeignKey("DestinoRefId");

                    b.HasOne("ReservacionHoteles.Models.Tipo", "Tipo")
                        .WithMany()
                        .HasForeignKey("TipoId");

                    b.Navigation("Destinos");

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("ReservacionHoteles.Models.ListaPrecio", b =>
                {
                    b.HasOne("ReservacionHoteles.Models.CondicionPago", "CondicionPago")
                        .WithMany()
                        .HasForeignKey("CondicionPagoRefId");

                    b.Navigation("CondicionPago");
                });

            modelBuilder.Entity("ReservacionHoteles.Models.Tarifa", b =>
                {
                    b.HasOne("ReservacionHoteles.Models.ListaPrecio", "ListaPrecio")
                        .WithMany()
                        .HasForeignKey("ListaPrecioRefId");

                    b.Navigation("ListaPrecio");
                });

            modelBuilder.Entity("ReservacionHoteles.Models.funcionTarifa", b =>
                {
                    b.HasOne("ReservacionHoteles.Models.Funcion", null)
                        .WithMany("Tarifas")
                        .HasForeignKey("FuncionId");

                    b.HasOne("ReservacionHoteles.Models.Tarifa", "Tarifa")
                        .WithMany()
                        .HasForeignKey("TarifaRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tarifa");
                });

            modelBuilder.Entity("ReservacionHoteles.Models.Funcion", b =>
                {
                    b.Navigation("Tarifas");
                });
#pragma warning restore 612, 618
        }
    }
}
