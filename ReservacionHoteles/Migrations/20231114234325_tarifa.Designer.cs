// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReservacionHoteles.Repos;

#nullable disable

namespace ReservacionHoteles.Migrations
{
    [DbContext(typeof(ReservacionHotelesContext))]
    [Migration("20231114234325_tarifa")]
    partial class tarifa
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ReservacionHoteles.Models.CondicionPago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("smalldatetime");

                    b.HasKey("Id");

                    b.ToTable("CondicionPago");
                });

            modelBuilder.Entity("ReservacionHoteles.Models.Destinos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("smalldatetime");

                    b.HasKey("Id");

                    b.ToTable("Destinos");
                });

            modelBuilder.Entity("ReservacionHoteles.Models.Disponibilidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("HotelRefId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoRefId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HotelRefId");

                    b.HasIndex("TipoRefId");

                    b.ToTable("Disponibilidad");
                });

            modelBuilder.Entity("ReservacionHoteles.Models.Habitaciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("NumHabitaciones")
                        .HasColumnType("int");

                    b.Property<int?>("NumPersonas")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Habitaciones");
                });

            modelBuilder.Entity("ReservacionHoteles.Models.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Calificacion")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("DestinoRefId")
                        .HasColumnType("int");

                    b.Property<string>("DestinosRefId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaEntrada")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaSalida")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ImagemHotel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("TipoId")
                        .HasColumnType("int");

                    b.Property<string>("TipoRefId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DestinoRefId");

                    b.HasIndex("TipoId");

                    b.ToTable("Hotel");
                });

            modelBuilder.Entity("ReservacionHoteles.Models.ListaPrecio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CondicionPagoRefId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("FechaHasta")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("CondicionPagoRefId");

                    b.ToTable("ListaPrecio");
                });

            modelBuilder.Entity("ReservacionHoteles.Models.Tarifa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("ListaPrecioRefId")
                        .HasColumnType("int");

                    b.Property<int>("PorcentajeDescuento")
                        .HasColumnType("int");

                    b.Property<decimal?>("TarifaPrecio")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("ListaPrecioRefId");

                    b.ToTable("Tarifa");
                });

            modelBuilder.Entity("ReservacionHoteles.Models.Tipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("smalldatetime");

                    b.HasKey("Id");

                    b.ToTable("Tipo");
                });

            modelBuilder.Entity("ReservacionHoteles.Models.Disponibilidad", b =>
                {
                    b.HasOne("ReservacionHoteles.Models.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("HotelRefId");

                    b.HasOne("ReservacionHoteles.Models.Tipo", "Tipo")
                        .WithMany()
                        .HasForeignKey("TipoRefId");

                    b.Navigation("Hotel");

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("ReservacionHoteles.Models.Hotel", b =>
                {
                    b.HasOne("ReservacionHoteles.Models.Destinos", "Destinos")
                        .WithMany()
                        .HasForeignKey("DestinoRefId");

                    b.HasOne("ReservacionHoteles.Models.Tipo", "Tipo")
                        .WithMany()
                        .HasForeignKey("TipoId");

                    b.Navigation("Destinos");

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("ReservacionHoteles.Models.ListaPrecio", b =>
                {
                    b.HasOne("ReservacionHoteles.Models.CondicionPago", "CondicionPago")
                        .WithMany()
                        .HasForeignKey("CondicionPagoRefId");

                    b.Navigation("CondicionPago");
                });

            modelBuilder.Entity("ReservacionHoteles.Models.Tarifa", b =>
                {
                    b.HasOne("ReservacionHoteles.Models.ListaPrecio", "ListaPrecio")
                        .WithMany()
                        .HasForeignKey("ListaPrecioRefId");

                    b.Navigation("ListaPrecio");
                });
#pragma warning restore 612, 618
        }
    }
}
